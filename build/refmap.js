// Generated by CoffeeScript 1.6.3
/*
Map f(ref) -> ref
*/


(function() {
  var refmap;

  module.exports = refmap = function() {
    var arr, entry;
    arr = [];
    entry = function(k) {
      var x, _i, _len;
      for (_i = 0, _len = arr.length; _i < _len; _i++) {
        x = arr[_i];
        if (x[0] === k) {
          return x;
        }
      }
    };
    return {
      get: function(k) {
        var _ref;
        return (_ref = entry(k)) != null ? _ref[1] : void 0;
      },
      exists: function(k) {
        return entry(k) != null;
      },
      del: function(k) {
        var kv;
        arr = (function() {
          var _i, _len, _results;
          _results = [];
          for (_i = 0, _len = arr.length; _i < _len; _i++) {
            kv = arr[_i];
            if (kv[0] !== k) {
              _results.push(kv);
            }
          }
          return _results;
        })();
        return void 0;
      },
      set: function(k, v) {
        var e;
        if ((e = entry(k)) != null) {
          e[1] = v;
        } else {
          arr.push([k, v]);
        }
        return v;
      },
      get_or_else: function(k, block) {
        var e, v;
        if ((e = entry(k)) != null) {
          return e[1];
        } else {
          arr.push([k, (v = block())]);
          return v;
        }
      }
    };
  };

}).call(this);
